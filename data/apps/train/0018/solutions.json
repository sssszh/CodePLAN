["import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(1 / math.tan(math.pi / 2 / n))", "t = int(input())\nimport math as m\nwhile t:\n    t -= 1\n    a = int(input())\n    print(1 / m.tan(m.pi / (2 * a)))", "import sys\nimport math\nreadline = sys.stdin.readline\nread = sys.stdin.read\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n = ni()\n    print(1 / math.tan(math.pi / (2 * n)))\n    return\nT = ni()\nfor _ in range(T):\n    solve()", "import sys\nimport math\nimport operator as op\nfrom functools import reduce\n\ndef read_line():\n    return sys.stdin.readline()[:-1]\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_int_line():\n    return [int(v) for v in sys.stdin.readline().split()]\n\ndef read_float_line():\n    return [float(v) for v in sys.stdin.readline().split()]\n\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(op.mul, range(n, n - r, -1), 1)\n    denom = reduce(op.mul, range(1, r + 1), 1)\n    return numer / denom\n\ndef rad(x):\n    return math.pi * x / 180\nt = read_int()\nfor i in range(t):\n    n = read_int()\n    ans = 1 / math.tan(rad(180 / (2 * n)))\n    print(ans)", "import math\n\ndef sqare_size(n):\n    return 1 / math.tan(math.pi / (2 * n))\nt = int(input())\nfor _ in range(t):\n    print(sqare_size(int(input())))", "from math import *\nt = int(input())\nfor case in range(t):\n    n = int(input())\n    print(1 / tan(pi / (2 * n)))", "import sys\nimport math\ninput = sys.stdin.readline\nflush = sys.stdout.flush\nfor _ in range(int(input())):\n    n = int(input())\n    print(1.0 / math.tan(math.pi / (2.0 * n)))", "import math\nimport sys\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return list(map(int, input().split()))\ntest_cases = int(input())\nfor _ in range(test_cases):\n    sides = int(input())\n    sides *= 2\n    apothem = 1 / (2 * math.tan(180 / sides * (math.pi / 180)))\n    print(2 * apothem)", "import math\nT = int(input())\nfor i in range(T):\n    x = 2 * int(input())\n    print(1 / math.tan(math.pi / x))", "from math import cos, pi, sin\nfor _ in range(int(input())):\n    n = int(input())\n    alpha = pi / (n * 2)\n    print(cos(alpha) / sin(alpha))", "from math import tan, pi\nfor _ in range(int(input())):\n    n = int(input())\n    n *= 2\n    print(1 / tan(pi / n))", "import math\nimport sys\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    n *= 2\n    a = (n - 2) * math.pi / n / 2\n    r = 1 / 2 * math.tan(a)\n    print(2 * r)", "import math\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    theta = 2 * n\n    print(1 / math.tan(math.radians(360 / 4 / n)))", "from math import sin, pi\nn = int(input())\n\ndef f(a, b):\n    return sin(b * pi / a) / sin(pi / a)\nfor _ in range(n):\n    m = int(input())\n    if m % 2 == 0:\n        print('%.12f' % f(2 * m, m - 1))\n    else:\n        print('%.12f' % f(2 * m, m))", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print(1 / tan(radians(90 / n)))", "from math import sin, pi, sqrt, tan\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    angle = pi / n / 2\n    r = 1 / tan(angle)\n    print('{:.9f}'.format(r))", "import math\nimport sys\ninput = sys.stdin.readline\nQ = int(input())\nQuery = [int(input()) for _ in range(Q)]\nfor N in Query:\n    if N % 2 == 0:\n        print(1 / math.tan(math.pi / (N * 2)))", "import math\nt = int(input())\nfor i in range(0, t):\n    a = int(input())\n    pi = math.pi\n    print(round(1 / math.tan(pi / (2 * a)), 9))", "from math import cos, sin, pi\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    if n == 2:\n        print(1.0)\n    else:\n        print(sin(pi / n) / (1 - cos(pi / n)))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(1 / math.tan(math.pi / (2 * n)))", "import random\nimport math\nLI = lambda : list(map(int, input().split()))\nMI = lambda : map(int, input().split())\nyes = lambda : print('Yes')\nno = lambda : print('No')\nI = lambda : list(input())\nJ = lambda x: ''.join(x)\nII = lambda : int(input())\nSI = lambda : input()\nt = II()\nfor q in range(t):\n    n = II()\n    R = 1 / (2 * math.sin(math.pi / (2 * n)))\n    r = math.sqrt(R ** 2 - 0.25)\n    print(2 * r)", "mod = 1000000007\neps = 10 ** (-9)\n\ndef main():\n    import sys\n    from math import sin, pi, cos\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        N = int(input())\n        NN = N * 2\n        print(cos(pi / NN) / sin(pi / NN))\n\ndef __starting_point():\n    main()\n__starting_point()", "import math\nt = int(input())\nfor ti in range(t):\n    n = int(input())\n    a = math.pi / (2 * n)\n    side = 1 / math.tan(a)\n    print(side)", "import math as m\n\ndef fu(a):\n    return a / 180 * m.pi\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = n // 2 - 1\n    b = 180 - 360 / (2 * n)\n    s = 0\n    for i in range(1, a + 1):\n        s = s + m.cos(fu(i * b - (2 * i - 1) * 90))\n    print(2 * s + 1)", "import sys\nfrom math import tan, pi\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\nfrom itertools import islice, cycle\n\ndef go():\n    n = int(input())\n    return 1 / tan(pi / (2 * n))\nt = int(input())\nans = []\nfor _ in range(t):\n    ans.append(str(go()))\nprint('\\n'.join(ans))", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    ang = math.pi / (2 * n)\n    ans = 1 / math.tan(ang)\n    print(ans)", "import math\n\ndef main():\n    n = int(input())\n    a = math.pi / (2 * n)\n    x = 1 / math.sin(a) / 2\n    res = 2 * math.cos(a) * x\n    print(res)\nfor _ in range(int(input())):\n    main()", "import math\nfor nt in range(int(input())):\n    n = int(input())\n    m = 2 * n\n    a = (m - 2) * 180 / m\n    s = 180 - a\n    t = s\n    ans = 0\n    for i in range((n - 2) // 2):\n        ans += math.cos(t * math.pi / 180)\n        t += s\n    print(ans * 2 + 1)", "import os\nimport sys\nif os.path.exists('/mnt/c/Users/Square/square/codeforces'):\n    f = iter(open('C.txt').readlines())\n\n    def input():\n        return next(f).strip()\nelse:\n    input = lambda : sys.stdin.readline().strip()\nfprint = lambda *args: print(*args, flush=True)\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(1.0 / math.tan(math.pi / 2 / n))", "from math import sin, pi\n\ndef solve():\n    n = int(input())\n    return sin((n - 1) * pi / (2 * n)) / sin(pi / (2 * n))\n\ndef main():\n    t = int(input())\n    print('\\n'.join(map(str, [solve() for _ in range(t)])))\n\ndef __starting_point():\n    main()\n__starting_point()", "from math import *\nfor _ in range(int(input())):\n    n = 2 * int(input())\n    a = pi - pi * (n - 2) / n\n    ans = 0\n    for i in range(1, n // 4):\n        ans += cos(i * a)\n    print(2 * ans + 1)", "import math\nr = math.pi\nfor _ in range(int(input())):\n    N = int(input())\n    w = 2 * N\n    t = math.cos(r / w) / math.sin(r / w)\n    print(t)", "from math import tan, pi\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(1 / tan(pi / (2 * n)))", "import math\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    n *= 2\n    print(math.tan(math.pi / 2 - math.pi / n))", "from math import sin, pi, radians\n\ndef solve():\n    n = int(input()) * 2\n    a = 180 * (n - 2) / n\n    bc = (180 - a) / 2\n    d = 0.5 / sin(radians(bc))\n    return round(2 * (d ** 2 - 0.25) ** 0.5, 8)\nfor _ in range(int(input())):\n    print(solve())", "import sys\nimport math\npprint = lambda s: print(' '.join(map(str, s)))\ninput = lambda : sys.stdin.readline().strip()\nipnut = input\nfor i in range(int(input())):\n    n = int(input())\n    print(1 / math.tan(math.pi / (2 * n)))", "T = int(input())\nimport math\nn = [0] * T\nm = [0] * T\na = [0] * T\np = [0] * T\nfor t in range(T):\n    n = 2 * int(input())\n    out = 0\n    if n % 4 == 0:\n        print(math.tan(math.pi / n) ** (-1))\n    else:\n        print(math.sin(math.pi / n) ** (-1))", "from math import pi, sin\nfor i in range(int(input())):\n    n = int(input())\n    a = 0\n    ans = 0\n    x = pi - pi * (n - 1) / n\n    for j in range(n - 1):\n        a += x\n        ans += sin(a)\n    print(ans)"]