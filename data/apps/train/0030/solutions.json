["t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = 0\n    for y in range(1, n):\n        if s[y] == s[y - 1]:\n            ans += 1\n    print((ans + ans % 2) // 2)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    c = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            c += 1\n    print((c + 1) // 2)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    s = input()\n    (a, b) = (0, 0)\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            if s[i] == '0':\n                a += 1\n            else:\n                b += 1\n    print(max(a, b))", "import collections\nimport math\nfrom itertools import permutations as p\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    stack = []\n    for i in s:\n        if i == '1':\n            if stack and stack[-1] == '0':\n                stack.pop()\n        elif stack and stack[-1] == '1':\n            stack.pop()\n        stack.append(i)\n    print(len(stack) // 2)", "import sys\ninput = sys.stdin.readline\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        c = 0\n        for i in range(1, len(s)):\n            if s[i] == s[i - 1]:\n                c += 1\n        print(c // 2 + c % 2)\n    return\n\ndef __starting_point():\n    main()\n__starting_point()", "for _ in range(int(input())):\n    n = int(input())\n    (*s,) = list(map(int, input()))\n    cnt = [0, 0]\n    for i in range(len(s)):\n        if i > 0 and s[i] == s[i - 1]:\n            cnt[s[i]] += 1\n    print(max(cnt))", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    s = sys.stdin.readline().strip()\n    res = 0\n    i = 0\n    while i < n:\n        while i < n and s[i] != '1':\n            i += 1\n        if i >= n:\n            break\n        while i < n and s[i] == '1':\n            i += 1\n            res += 1\n        i += 1\n        res -= 1\n    i = 0\n    ans = 0\n    while i < n:\n        while i < n and s[i] != '0':\n            i += 1\n        if i >= n:\n            break\n        while i < n and s[i] == '0':\n            i += 1\n            ans += 1\n        i += 1\n        ans -= 1\n    print(max(ans, res))\nfor i in range(int(sys.stdin.readline().strip())):\n    main()", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    u = list(map(int, list(input())))\n    cnt1 = cnt0 = 0\n    for i in range(1, n):\n        if u[i] == u[i - 1]:\n            if u[i] == 0:\n                cnt0 += 1\n            else:\n                cnt1 += 1\n    ans.append(max(cnt1, cnt0))\nprint(*ans, sep='\\n')", "def solve(n):\n    s = input()\n    ans = 0\n    flag = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            if flag == 1:\n                ans += 1\n                flag = 0\n            else:\n                flag = 1\n    if flag:\n        ans += 1\n    return ans\nfor _ in range(int(input())):\n    print(solve(int(input())))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    blocks = [[s[0], 1]]\n    for i in range(1, n):\n        if s[i] == blocks[-1][0]:\n            blocks[-1][1] += 1\n        else:\n            blocks += [[s[i], 1]]\n    one = 0\n    zero = 0\n    for i in range(len(blocks)):\n        if blocks[i][0] == '0':\n            zero += blocks[i][1] - 1\n        else:\n            one += blocks[i][1] - 1\n    print(max(one, zero))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(s)\n    c0 = 0\n    c1 = 0\n    for i in range(n - 1):\n        if l[i] == l[i + 1]:\n            if l[i] == '0':\n                c0 += 1\n            else:\n                c1 += 1\n    print(max(c0, c1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    S = 0\n    for j in range(1, len(s)):\n        if s[j - 1] == '1' and s[j] == '1':\n            S += 1\n    if s[0] == '1' and s[-1] == '1' and (len(s) > 2):\n        S += 1\n    print(S)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    ans1 = 0\n    ans2 = 0\n    i = 0\n    while i < n:\n        c = 1\n        while s[i] == s[i - 1]:\n            c = c + 1\n            i = i + 1\n        if s[i - 1] == '1':\n            ans2 = ans2 + c - 1\n        else:\n            ans1 = ans1 + c - 1\n        i = i + 1\n    print(max(ans1, ans2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().strip()\n    o = 0\n    z = 0\n    for j in range(1, n):\n        if s[j] == s[j - 1]:\n            if s[j] == '1':\n                o = o + 1\n            else:\n                z = z + 1\n    print(max(z, o))", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef list2d(a, b, c):\n    return [[c for j in range(b)] for i in range(a)]\n\ndef list3d(a, b, c, d):\n    return [[[d for k in range(c)] for j in range(b)] for i in range(a)]\n\ndef list4d(a, b, c, d, e):\n    return [[[[e for l in range(d)] for k in range(c)] for j in range(b)] for i in range(a)]\n\ndef ceil(x, y=1):\n    return int(-(-x // y))\n\ndef INT():\n    return int(input())\n\ndef MAP():\n    return list(map(int, input().split()))\n\ndef LIST(N=None):\n    return list(MAP()) if N is None else [INT() for i in range(N)]\n\ndef Yes():\n    print('Yes')\n\ndef No():\n    print('No')\n\ndef YES():\n    print('YES')\n\ndef NO():\n    print('NO')\nINF = 10 ** 19\nMOD = 10 ** 9 + 7\nEPS = 10 ** (-10)\n\ndef RLE(data):\n    from itertools import groupby\n    return [(x, len(list(grp))) for (x, grp) in groupby(data)]\n\ndef check(S, T):\n    A = [0] * N\n    for i in range(N):\n        if S[i] != T[i]:\n            A[i] = 1\n    rle = RLE(A)\n    cnt = 0\n    for (x, _) in rle:\n        if x:\n            cnt += 1\n    return cnt\nfor _ in range(INT()):\n    N = INT()\n    S = input()\n    T1 = '01' * (N // 2)\n    T2 = '10' * (N // 2)\n    ans = min(check(S, T1), check(S, T2))\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor tests in range(t):\n    n = int(input())\n    S = input().strip()\n    A = 0\n    for i in range(1, n):\n        if S[i] == S[i - 1]:\n            A += 1\n    print((A + 1) // 2)", "for irjfr in range(int(input())):\n    input()\n    s = input()\n    res = int(s[0] == s[-1] == '1')\n    for i in range(len(s) - 1):\n        res += int(s[i] == s[i + 1] == '1')\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans1 = 0\n    ans2 = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            if s[i] == '0':\n                ans1 += 1\n            else:\n                ans2 += 1\n    print(max(ans1, ans2))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    r = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            continue\n        else:\n            r += 1\n    print(math.ceil(r / 2))"]