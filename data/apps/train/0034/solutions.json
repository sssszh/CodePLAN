["for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        print('7' + '1' * ((n - 3) // 2))\n    else:\n        print('1' * (n // 2))", "t = int(input())\nfor i in ' ' * t:\n    n = int(input())\n    if n % 2 == 1:\n        print('7' + '1' * ((n - 3) // 2))\n    else:\n        print('1' * (n // 2))", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        print('7', end='')\n        n -= 3\n    while n:\n        print('1', end='')\n        n -= 2\n    print()", "T = int(input())\nfor kase in range(T):\n    n = int(input())\n    if n & 1:\n        print('7' + (n - 3) // 2 * '1')\n    else:\n        print(n // 2 * '1')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('7' + '1' * (n // 2 - 1))\n    else:\n        print('1' * (n // 2))", "import sys\ninput = sys.stdin.readline\n\ndef getInt():\n    return int(input())\n\ndef getVars():\n    return list(map(int, input().split()))\n\ndef getList():\n    return list(map(int, input().split()))\n\ndef getStr():\n    return input().strip()\nt = getInt()\nfor _ in range(t):\n    n = getInt()\n    if n % 2 == 1:\n        print('7' + '1' * (n // 2 - 1))\n    else:\n        print('1' * (n // 2))", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print('1' * (n // 2))\n    else:\n        print('7' + '1' * ((n - 3) // 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print('7' * (n % 2) + '1' * (n // 2 - n % 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = ''\n    if n % 2 == 1:\n        arr = '7'\n        for j in range((n - 3) // 2):\n            arr += '1'\n    else:\n        for j in range(n // 2):\n            arr += '1'\n    print(arr)", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\n\ndef ii():\n    return int(input())\n\ndef mi():\n    return list(map(int, input().split()))\n\ndef li():\n    return list(map(int, input().split()))\n\ndef lcm(a, b):\n    return abs(a * b) // math.gcd(a, b)\n\ndef revn(n):\n    return str(n)[::-1]\n\ndef dd():\n    return collections.defaultdict(int)\n\ndef ddl():\n    return collections.defaultdict(list)\n\ndef sieve(n):\n    if n < 2:\n        return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\n\ndef divs(n, start=2):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n / i == i:\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\n\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\n\ndef prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0:\n            return False\n    return True\n\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\n\ndef cdiv(n, k):\n    return n // k + (n % k != 0)\nt = ii()\nfor _ in range(t):\n    n = ii()\n    if n % 2:\n        print('7' + '1' * ((n - 3) // 2))\n    else:\n        print('1' * (n // 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = ''\n    if n % 2:\n        s = '7'\n        n -= 3\n    else:\n        s = '1'\n        n -= 2\n    s += '1' * (n // 2)\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        print('1' * (n // 2))\n    else:\n        print('7' + '1' * ((n - 3) // 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        print('1' * (n // 2))\n    else:\n        print('7' + '1' * ((n - 3) // 2))", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print('1' * (n // 2))\n    else:\n        print('7' + '1' * (n // 2 - 1))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    if n % 2 == 0:\n        print('1' * (n // 2))\n    else:\n        print('7' + '1' * ((n - 3) // 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        print('1' * (n // 2))\n    else:\n        print('7' + '1' * (n // 2 - 1))", "t = int(input())\nwhile t:\n    n = int(input())\n    o = '1' * (n // 2)\n    if n % 2:\n        o = '7' + o[1:]\n    print(o)\n    t -= 1", "n = int(input())\nfor i in range(n):\n    d = int(input())\n    if d % 2 == 1:\n        e = (d - 3) // 2\n        s = '7' + '1' * e\n    else:\n        e = d // 2\n        s = '1' * e\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        print('1' * (n // 2))\n    else:\n        print('7' + '1' * (n // 2 - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        x = n // 2\n        for i in range(x):\n            print(1, end='')\n    else:\n        x = n // 2\n        x -= 1\n        print(7, end='')\n        for i in range(x):\n            print(1, end='')\n    print()", "t = int(input())\nfor y in range(t):\n    n = int(input())\n    s = ''\n    if n % 2 == 1:\n        s += '7'\n        n -= 3\n    s += n // 2 * '1'\n    print(int(s))"]